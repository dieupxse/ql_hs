// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QL_HS.Database;

namespace QL_HS.Migrations
{
    [DbContext(typeof(QLHSDbContext))]
    [Migration("20230823181519_AddPickupState")]
    partial class AddPickupState
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QL_HS.Database.AccountEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Password")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Role")
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("Username")
                        .HasColumnType("NVARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("QL_HS.Database.GuardianEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.ToTable("Guardians");
                });

            modelBuilder.Entity("QL_HS.Database.PickupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("GuardianEntityId");

                    b.Property<int>("GuardianId");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status");

                    b.Property<int?>("StudentEntityId");

                    b.Property<int>("StudentId");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GuardianEntityId");

                    b.HasIndex("GuardianId");

                    b.HasIndex("StudentEntityId");

                    b.HasIndex("StudentId", "GuardianId");

                    b.ToTable("Pickups");
                });

            modelBuilder.Entity("QL_HS.Database.StudentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<string>("Class")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("Dob");

                    b.Property<string>("Grade")
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int?>("GuardianEntityId");

                    b.Property<int>("GuardianId");

                    b.Property<string>("Name")
                        .HasColumnType("NVARCHAR(300)");

                    b.Property<string>("Status");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("GuardianEntityId");

                    b.HasIndex("GuardianId");

                    b.HasIndex("Name", "Class");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("QL_HS.Database.GuardianEntity", b =>
                {
                    b.HasOne("QL_HS.Database.AccountEntity", "Account")
                        .WithOne("Guardian")
                        .HasForeignKey("QL_HS.Database.GuardianEntity", "AccountId");
                });

            modelBuilder.Entity("QL_HS.Database.PickupEntity", b =>
                {
                    b.HasOne("QL_HS.Database.GuardianEntity")
                        .WithMany("Pickups")
                        .HasForeignKey("GuardianEntityId");

                    b.HasOne("QL_HS.Database.GuardianEntity", "Guardian")
                        .WithMany()
                        .HasForeignKey("GuardianId");

                    b.HasOne("QL_HS.Database.StudentEntity")
                        .WithMany("Pickups")
                        .HasForeignKey("StudentEntityId");

                    b.HasOne("QL_HS.Database.StudentEntity", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("QL_HS.Database.StudentEntity", b =>
                {
                    b.HasOne("QL_HS.Database.GuardianEntity")
                        .WithMany("Students")
                        .HasForeignKey("GuardianEntityId");

                    b.HasOne("QL_HS.Database.GuardianEntity", "Guardian")
                        .WithMany()
                        .HasForeignKey("GuardianId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
